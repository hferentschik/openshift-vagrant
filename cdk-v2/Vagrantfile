  # -*- mode: ruby -*-
# vi: set ft=ruby :

# Usage:
#
# To use this Vagrantfile:
# * Have valid RH employee subscription account
# * Be connected to the internal Red Hat network
# * Have the 'vagrant-registration' plugin installed
# * Have the 'vagrant-service-manager' plugin installed

# General configuration:

# URLs from where to fetch the Vagrant VirtualBox images
# FIXME: How to point to the official box image?
VAGRANT_VIRTUALBOX_URL='http://cdk-builds.usersys.redhat.com/builds/19-Feb-2016/rhel-cdk-kubernetes-7.2-15.x86_64.vagrant-virtualbox.box'
VAGRANT_LIBVIRT_URL='http://cdk-builds.usersys.redhat.com/builds/19-Feb-2016/rhel-cdk-kubernetes-7.2-15.x86_64.vagrant-libvirt.box'

# The IP address and hostname of the VM as exposed on the host.
# Uses xip.io for now to have zero configuration routes
PUBLIC_ADDRESS="10.1.2.2"
PUBLIC_HOST="cdk.#{PUBLIC_ADDRESS}.xip.io"
REGISTRY_HOST="hub.#{PUBLIC_HOST}"

# The amount of memory available to the VM
VM_MEMORY = ENV['VM_MEMORY'] || 4096

# Number of VM CPUs
VM_CPU = ENV['VM_CPU'] || 2

SUBSCRIPTION_INFO = "
    Red Hat subscription credentials are needed for this VM.
    You can supply them interactively or by setting environment variables.
    Set these environment variables to your subscription username/password to avoid interactive registration:

    $ export SUB_USERNAME=rhn-username
    $ export SUB_PASSWORD=password
  "

NO_ADBINFO_ERROR = "vagrant-service-manager plugin is not installed, run `vagrant plugin install vagrant-service-manager` to install the plugin."
NO_VAGRANT_REGISTRATION_ERROR = "vagrant-registration plugin is not installed, run `vagrant plugin install vagrant-registration` to install the plugin."

Vagrant.configure(2) do |config|

  config.vm.define "cdk" do |cdk|
      cdk.vm.provider "virtualbox" do |v, override|
      	override.vm.box = "cdk_v2"
        override.vm.box_url = "#{VAGRANT_VIRTUALBOX_URL}"
        v.name = "openshift.cdk-2"
        v.memory = VM_MEMORY
        v.cpus   = VM_CPU
        v.customize ["modifyvm", :id, "--ioapic", "on"]
        v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      end

      cdk.vm.provider "libvirt" do |v, override|
      	override.vm.box = "cdk_v2"
        override.vm.box_url = "#{VAGRANT_LIBVIRT_URL}"
        v.driver = "kvm"
        v.memory = VM_MEMORY
        v.cpus   = VM_CPU
      end

      cdk.vm.network "private_network", ip: "#{PUBLIC_ADDRESS}"

      unless Vagrant.has_plugin?("vagrant-adbinfo")
        raise Vagrant::Errors::VagrantError.new, NO_SERVICE_MANAGER_ERROR
      end

      unless Vagrant.has_plugin?('vagrant-registration')
        raise Vagrant::Errors::VagrantError.new, NO_VAGRANT_REGISTRATION_ERROR
      end

      cdk.registration.username    = ENV.has_key?('SUB_USERNAME') ? "#{ENV['SUB_USERNAME']}" : nil
      cdk.registration.password    = ENV.has_key?('SUB_PASSWORD') ? "#{ENV['SUB_PASSWORD']}" : nil
      cdk.registration.auto_attach = true

      case ARGV[0]
      when "up", "halt"
        if cdk.registration.username.nil? || cdk.registration.password.nil?
          puts SUBSCRIPTION_INFO
        end
      end

      cdk.vm.provision :shell, inline: <<-SHELL
        # https://github.com/projectatomic/adb-utils/issues/29
        # HACK - Enabling and starting OpenShift should not be needed here,
        # but we are working around
        if ! systemctl -q is-enabled openshift; then
          systemctl enable openshift
          systemctl start openshift
          systemctl stop openshift
        fi

        if ! grep -q "#{REGISTRY_HOST}" /etc/sysconfig/docker; then
          sed -i.orig -e "s/INSECURE_REGISTRY=.*/INSECURE_REGISTRY='--insecure-registry 172.30.0.0\\/16 --insecure-registry #{PUBLIC_ADDRESS} --insecure-registry #{REGISTRY_HOST}'/" /etc/sysconfig/docker
        fi

        if ! grep -q "#{PUBLIC_HOST}" /etc/sysconfig/openshift_option; then
          sed -i.orig -e "s/OPTIONS=.*/OPTIONS='-host #{PUBLIC_HOST} -ip #{PUBLIC_ADDRESS}'/" /etc/sysconfig/openshift_option
        fi

        # HACK - see above
        systemctl start openshift

        export KUBECONFIG=/var/lib/origin/openshift.local.config/master/admin.kubeconfig
        # https://github.com/projectatomic/adb-utils/issues/31
        oc delete route/docker-registry
        oc expose service docker-registry --hostname #{REGISTRY_HOST}

        # https://github.com/projectatomic/adb-utils/issues/32
        oadm policy add-cluster-role-to-user cluster-admin admin

      SHELL

      cdk.vm.provision "shell", inline: <<-SHELL
        echo
        echo "Successfully started and provisioned VM with #{VM_CPU} cores and #{VM_MEMORY} MB of memory."
        echo "To modify the number of cores and/or available memory set the environment variables"
        echo "VM_CPU respectively VM_MEMORY."
        echo
        echo "You can now access the OpenShift console on: https://#{PUBLIC_ADDRESS}:8443/console"
        echo
        echo "To use OpenShift CLI, run:"
        echo "$ vagrant ssh"
        echo "$ oc login #{PUBLIC_ADDRESS}:8443"
        echo
        echo "Configured users are (<username>/<password>):"
        echo "openshift-dev/devel"
        echo "admin/admin"
        echo
        echo "If you have the oc client library on your host, you can also login from your host."
        echo
      SHELL
    end
end

